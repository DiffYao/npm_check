
digraph {
node[shape=box,style="rounded,filled",fillcolor=white];
initial[label="",shape=circle,style=filled,fillcolor=black,width=0.25,height=0.25];
final[label="",shape=doublecircle,style=filled,fillcolor=black,width=0.25,height=0.25];
s1_1[label="Program:enter\nIfStatement:enter\nBinaryExpression:enter\nIdentifier (a)\nLiteral (10)\nBinaryExpression:exit"];
s1_2[label="BlockStatement:enter\nIfStatement:enter\nBinaryExpression:enter\nIdentifier (a)\nLiteral (5)\nBinaryExpression:exit"];
s1_3[label="BlockStatement:enter\nExpressionStatement:enter\nAssignmentExpression:enter\nIdentifier (a)\nLiteral (11)\nAssignmentExpression:exit\nExpressionStatement:exit\nBlockStatement:exit"];
s1_5[label="IfStatement:exit\nBlockStatement:exit"];
s1_7[label="IfStatement:exit\nExpressionStatement:enter\nAssignmentExpression:enter\nIdentifier (a)\nLiteral (10)\nAssignmentExpression:exit\nExpressionStatement:exit\nProgram:exit"];
s1_6[label="BlockStatement:enter\nExpressionStatement:enter\nAssignmentExpression:enter\nIdentifier (a)\nLiteral (12)\nAssignmentExpression:exit\nExpressionStatement:exit\nBlockStatement:exit"];
s1_4[label="BlockStatement:enter\nExpressionStatement:enter\nAssignmentExpression:enter\nIdentifier (a)\nLiteral (9)\nAssignmentExpression:exit\nExpressionStatement:exit\nBlockStatement:exit"];
initial->s1_1->s1_2->s1_3->s1_5->s1_7;
s1_1->s1_6->s1_7;
s1_2->s1_4->s1_5;
s1_7->final;
}